apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: deployment-template
parameters:
- name: "SERVICE_NAME"
  description: "The name of the service"
  value: "template-service"
  required: true
- name: "CLUSTER_IP"
  description: "The IP address of the previously deployed version"
  value: "0.0.0.0"
  required: true
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    generation: 1
    labels:
      app: ${SERVICE_NAME}
    name: ${SERVICE_NAME}
  spec:
    replicas: 1
    selector:
      app: ${SERVICE_NAME}
      deploymentconfig: ${SERVICE_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources:
        limits:
          cpu: 500m
          memory: 512M
        requests:
          cpu: 200m
          memory: 256M
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${SERVICE_NAME}
          deploymentconfig: ${SERVICE_NAME}
      spec:
        volumes:
          - name: mongo
            persistentVolumeClaim:
              claimName: mongo
        containers:
        - image: 547952504744.dkr.ecr.eu-central-1.amazonaws.com/mongo:latest
          imagePullPolicy: Always
          name: ${SERVICE_NAME}
          ports:
            - containerPort: 27017
              protocol: TCP
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: 'whol'
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: 'f7J5fmAG'
          readinessProbe:
            tcpSocket:
              port: 27017
            initialDelaySeconds: 150
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          resources:
            limits:
              cpu: 2
              memory: 2048M
            requests:
              cpu: 1
              memory: 1024M
          volumeMounts:
            - name: mongo
              mountPath: /data
          terminationMessagePath: /dev/termination-log
          securityContext:
            privileged: true
        nodeSelector:
          host-type: oracle-dev
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext:
          privileged: true
        terminationGracePeriodSeconds: 30
    test: false
    triggers: {}
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: ${SERVICE_NAME}
    name: ${SERVICE_NAME}
  spec:
    ports:
    - name: 27017-tcp
      port: 27017
      protocol: TCP
      targetPort: 27017
    selector:
      deploymentconfig: ${SERVICE_NAME}
    sessionAffinity: None
    clusterIP:  172.30.113.175
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: ${SERVICE_NAME}
    name: ${SERVICE_NAME}-ext
  spec:
    ports:
      - name: 27017-tcp
        protocol: TCP
        port: 27017
        targetPort: 27017
        nodePort: 27018
    selector:
      deploymentconfig: ${SERVICE_NAME}
    clusterIP: 172.1.1.2
    type: LoadBalancer
    externalIPs:
      - 172.1.1.3
    deprecatedPublicIPs:
      - 172.1.1.3
    sessionAffinity: None
  status:
    loadBalancer:
      ingress:
        - ip: 172.1.1.3